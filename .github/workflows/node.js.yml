# This workflow will do a clean installation of node dependencies, cache/restore them, build the source code and run tests across different versions of node
# For more information see: https://help.github.com/actions/language-and-framework-guides/using-nodejs-with-github-actions

name: Node.js CI

on:
  push:
    branches:
      - main
      - master
  pull_request:
    branches:
      - main
      - master

env:
      DATABASE_URL: ${{ secrets.DATABASEURL }}


jobs:
  build:

    runs-on: ubuntu-latest

    strategy:
      matrix:
        node-version: [18.x]
       

        


    steps:
    - name: "install mysql"
    - uses: mirromutth/mysql-action@v1.1
              with:
                host port: 3306 # Optional, default value is 3306. The port of host
                container port: 3307 # Optional, default value is 3306. The port of container
                character set server: 'utf8' # Optional, default value is 'utf8mb4'. The '--character-set-server' option for mysqld
                collation server: 'utf8_general_ci' # Optional, default value is 'utf8mb4_general_ci'. The '--collation-server' option for mysqld
                mysql version: '8.0' # Optional, default value is "latest". The version of the MySQL
                mysql database: 'chat' # Optional, default value is "test". The specified database which will be create
                mysql root password: ${{ secrets.ROOTPASSWORD }} # Required if "mysql user" is empty, default is empty. The root superuser password
                mysql user: 'root' # Required if "mysql root password" is empty, default is empty. The superuser for the specified database. Can use secrets, too
                mysql password: ${{ secrets.ROOTPASSWORD }} # Required if "mysql user" exists. The password for the "mysql user"

    - uses: actions/checkout@v2
    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    

   
        

    - name: Install dependencies
      run: npm i
      
    - name: create db
      run: npx prisma db push
      
    - name: run tests
    - run:  npm run test

  
    - name: Deploy application
      if: ${{ github.ref == 'refs/heads/master' || github.ref == 'refs/heads/main' }}
      uses: akhileshns/heroku-deploy@v3.12.12
      with:
        heroku_api_key: ${{secrets.HEROKU_API_KEY}}
        heroku_app_name: "chat-in-realitime"
        heroku_email: "rodrigobrinate32@gmail.com"
        # set buildpacks
        
